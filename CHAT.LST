Microsoft (R) Macro Assembler Version 5.10                  12/15/19 15:17:2
                                                             Page     1-1


				INCLUDE lib.inc
			     C	; GETCURSOR - Get cursor pos., X=>DL & Y=>DH
			     C	GETCURSOR MACRO
			     C	    MOV AH,03H
			     C	    MOV BH,00H
			     C	    INT 10H
			     C	ENDM GETCURSOR
			     C	
			     C	; SETCURSOR - Set cursor X and Y
			     C	; Params: X,Y 
			     C	SETCURSOR MACRO X,Y
			     C	    MOV AH,02H
			     C	    MOV BH,00H
			     C	    MOV DL,X
			     C	    MOV DH,Y
			     C	    INT 10H
			     C	ENDM SETCURSOR
			     C	
			     C	; GETKEY - Get key pressed (Wait for a key-AH:s
				cancode,AL:ASCII) 
			     C	GETKEY MACRO 
			     C	    MOV AH,0
			     C	    INT 16H
			     C	ENDM GETKEY
			     C	
			     C	; GETKEY - Get key pressed (Wait for a key-AH:s
				cancode,AL:ASCII) 
			     C	GETKEY1 MACRO
			     C	    GETKEY
			     C	    MOV CHAR1,AL
			     C	ENDM GETKEY
			     C	; GETKEY - Get key pressed (Wait for a key-AH:s
				cancode,AL:ASCII) 
			     C	GETKEY2 MACRO 
			     C	    GETKEY
			     C	    MOV CHAR2,AL
			     C	ENDM GETKEY
			     C	
			     C	
			     C	
			     C	;GETKEY_NOWAIT - Get key pressed without waitin
				g
			     C	GETKEY_NOWAIT MACRO
			     C	    MOV AH,1
			     C	    INT 16H
			     C	    clearkeyboardbuffer
			     C	ENDM GETKEY_NOWAIT
			     C	
			     C	;----------------------------------------------
				----------------------------
			     C	; clears keyboard buffer
			     C	;----------------------------------------------
				----------------------------
			     C	clearkeyboardbuffer MACRO
Microsoft (R) Macro Assembler Version 5.10                  12/15/19 15:17:2
                                                             Page     1-2


			     C		push	ax
			     C		mov		ax, 0000h
			     C		mov		es, ax
			     C		mov		es:[041ah], 041eh
			     C		mov		es:[041ch], 041eh
								; Clears keyboa
				rd buffer
			     C		pop		ax
			     C	endm  clearkeyboardbuffer
			     C	
			     C	
			     C	; COMPARE_KEY - Compares a keyboard key Stored 
				in AH with a Given scan code and sets ZF if equ
				al
			     C	; Params: (byte) KASCII - ASCII code for the co
				mpared key  
			     C	COMPARE_KEY MACRO KASCII
			     C	    CMP AL, KASCII
			     C	ENDM COMPARE_KEY
			     C	
			     C	; PRTCHAR - Print a char with a color
			     C	PRTCHAR MACRO NTIMES, CHAR_ASCII, COLOR 
			     C	    MOV AH,09H
			     C	    MOV BH,0
			     C	    MOV AL,CHAR_ASCII
			     C	    MOV CX,NTIMES ; No of times
			     C	    MOV BL,COLOR
			     C	    INT 10H
			     C	ENDM PRTCHAR
			     C	
			     C	; PRINTMSG - Print message 
			     C	; Params: MSG - (byte[]1) message to print
			     C	PRINTMSG MACRO MSG
			     C	    MOV AX,09H
			     C	    MOV DX,offset MSG
			     C	    INT 21H
			     C	ENDM PRINTMSG
			     C	
			     C	HALT MACRO
			     C	    MOV AH,4CH
			     C	    INT 21H
			     C	ENDM HALT
			     C	
			     C	; SCROLL: Scroll no of lines in a specific wind
				ow
			     C	; Params:   NLINES - no. of lines
			     C	;           X1 - x of upper left corner
			     C	;           Y1 - y of upper left corner
			     C	;           X2 - x of lower right corner
			     C	;           Y2 - y of lower right corner
			     C	; USES : AX,BX,CX,DX
			     C	SCROLL MACRO NLINES,X1,Y1,X2,Y2 
			     C	    MOV AH,06H
			     C	    MOV AL,NLINES
Microsoft (R) Macro Assembler Version 5.10                  12/15/19 15:17:2
                                                             Page     1-3


			     C	    MOV BH,07H  ; Normal video attribute
			     C	    MOV CH,Y1
			     C	    MOV CL,X1
			     C	    MOV DH,Y2
			     C	    MOV DL,X2
			     C	    INT 10H
			     C	ENDM SCROLL
			     C	
			     C	SCROLLUP1 MACRO
			     C	    SCROLL 1,0,0,79D,12D
			     C	ENDM SCROLLUP1
			     C	
			     C	SCROLLUP2 MACRO
			     C	    SCROLL 1,0,14D,79D,24D
			     C	ENDM SCROLLUP2
			     C	    
			     C	CLRS MACRO
			     C	    MOV AX,0600H
			     C	    MOV BH,07H
			     C	    MOV CX,0
			     C	    MOV DX,184FH
			     C	    INT 10H
			     C	ENDM CLRS
			     C	
			     C	PAUSE MACRO
			     C	LB: JMP LB
			     C	ENDM PAUSE
						.MODEL SMALL
				        .STACK 64
				
				        .DATA
 0000  48 65 6C 6C 6F 20	TESTMSG DB "Hello from TESTER!",'$'
       66 72 6F 6D 20 54	
       45 53 54 45 52 21	
       24			
 0013  00			CURSOR1_CUR_X DB 0
 0014  00			CURSOR2_CUR_X DB 0
 0015  00			CHAR1   DB  ?
 0016  00			CHAR2   DB  ?
				
				
				        .CODE
 0000				MAIN	PROC	FAR
				
 0000  B8 ---- R		        MOV	AX,@DATA
 0003  8E D8			        MOV	DS,AX
 0005  E8 00E8 R		        CALL CONFIG
				        CLRS
 0008  B8 0600               1	    MOV AX,0600H 
 000B  B7 07                 1	    MOV BH,07H 
 000D  B9 0000               1	    MOV CX,0 
 0010  BA 184F               1	    MOV DX,184FH 
 0013  CD 10                 1	    INT 10H 
 0015  E8 0170 R		        CALL DRWLINECENTER
Microsoft (R) Macro Assembler Version 5.10                  12/15/19 15:17:2
                                                             Page     1-4


				        SETCURSOR 0,10D
 0018  B4 02                 1	    MOV AH,02H 
 001A  B7 00                 1	    MOV BH,00H 
 001C  B2 00                 1	    MOV DL,0 
 001E  B6 0A                 1	    MOV DH,10D 
 0020  CD 10                 1	    INT 10H 
 0022				MAIN_LP:
				        GETKEY1
 0022  B4 00                 2	    MOV AH,0 
 0024  CD 16                 2	    INT 16H 
 0026  A2 0015 R             1	    MOV CHAR1,AL 
				        COMPARE_KEY 0DH
 0029  3C 0D                 1	    CMP AL, 0DH 
 002B  75 18			        JNZ CHECK_BACKSPACE1_LB
				        SCROLLUP1
 002D  B4 06                 2	    MOV AH,06H 
 002F  B0 01                 2	    MOV AL,1 
 0031  B7 07                 2	    MOV BH,07H  ; Normal video attribute 
 0033  B5 00                 2	    MOV CH,0 
 0035  B1 00                 2	    MOV CL,0 
 0037  B6 0C                 2	    MOV DH,12D 
 0039  B2 4F                 2	    MOV DL,79D 
 003B  CD 10                 2	    INT 10H 
 003D  C6 06 0013 R 00		        MOV CURSOR1_CUR_X,0
 0042  EB 40 90			        JMP TAKE2
 0045				CHECK_BACKSPACE1_LB:
				        COMPARE_KEY 08H
 0045  3C 08                 1	    CMP AL, 08H 
 0047  75 27			        JNZ PRINT_CHAR_1
 0049  80 3E 0013 R 00		        CMP CURSOR1_CUR_X, 0
 004E  74 34			        JZ TAKE2
 0050  FE 0E 0013 R		        DEC CURSOR1_CUR_X
				        SETCURSOR CURSOR1_CUR_X,10D
 0054  B4 02                 1	    MOV AH,02H 
 0056  B7 00                 1	    MOV BH,00H 
 0058  8A 16 0013 R          1	    MOV DL,CURSOR1_CUR_X 
 005C  B6 0A                 1	    MOV DH,10D 
 005E  CD 10                 1	    INT 10H 
				        PRTCHAR 1," ",00
 0060  B4 09                 1	    MOV AH,09H 
 0062  B7 00                 1	    MOV BH,0 
 0064  B0 20                 1	    MOV AL," " 
 0066  B9 0001               1	    MOV CX,1 ; No of times 
 0069  B3 00                 1	    MOV BL,00 
 006B  CD 10                 1	    INT 10H 
 006D  EB 15 90			        JMP TAKE2
 0070				PRINT_CHAR_1:
				        SETCURSOR CURSOR1_CUR_X,10D
 0070  B4 02                 1	    MOV AH,02H 
 0072  B7 00                 1	    MOV BH,00H 
 0074  8A 16 0013 R          1	    MOV DL,CURSOR1_CUR_X 
 0078  B6 0A                 1	    MOV DH,10D 
 007A  CD 10                 1	    INT 10H 
 007C  E8 0100 R		        CALL PRTCHAR1
Microsoft (R) Macro Assembler Version 5.10                  12/15/19 15:17:2
                                                             Page     1-5


 007F  EB 03 90			        JMP TAKE2
				
 0082				CURE_JUMP_OUT_OF_RANGE:
 0082  EB 9E			        JMP MAIN_LP
				
 0084				TAKE2:
				        GETKEY2
 0084  B4 00                 2	    MOV AH,0 
 0086  CD 16                 2	    INT 16H 
 0088  A2 0016 R             1	    MOV CHAR2,AL 
				        COMPARE_KEY 0DH
 008B  3C 0D                 1	    CMP AL, 0DH 
 008D  75 17			        JNZ CHECK_BACKSPACE2_LB
				        SCROLLUP2
 008F  B4 06                 2	    MOV AH,06H 
 0091  B0 01                 2	    MOV AL,1 
 0093  B7 07                 2	    MOV BH,07H  ; Normal video attribute 
 0095  B5 0E                 2	    MOV CH,14D 
 0097  B1 00                 2	    MOV CL,0 
 0099  B6 18                 2	    MOV DH,24D 
 009B  B2 4F                 2	    MOV DL,79D 
 009D  CD 10                 2	    INT 10H 
 009F  C6 06 0014 R 00		        MOV CURSOR2_CUR_X,0
 00A4  EB DC			        JMP CURE_JUMP_OUT_OF_RANGE
 00A6				CHECK_BACKSPACE2_LB:
				        COMPARE_KEY 08H
 00A6  3C 08                 1	    CMP AL, 08H 
 00A8  75 26			        JNZ PRINT_CHAR_2
 00AA  80 3E 0014 R 00		        CMP CURSOR2_CUR_X, 0
 00AF  74 D1			        JZ  CURE_JUMP_OUT_OF_RANGE
 00B1  FE 0E 0014 R		        DEC CURSOR2_CUR_X
				        SETCURSOR CURSOR2_CUR_X,22D
 00B5  B4 02                 1	    MOV AH,02H 
 00B7  B7 00                 1	    MOV BH,00H 
 00B9  8A 16 0014 R          1	    MOV DL,CURSOR2_CUR_X 
 00BD  B6 16                 1	    MOV DH,22D 
 00BF  CD 10                 1	    INT 10H 
				        PRTCHAR 1," ",00
 00C1  B4 09                 1	    MOV AH,09H 
 00C3  B7 00                 1	    MOV BH,0 
 00C5  B0 20                 1	    MOV AL," " 
 00C7  B9 0001               1	    MOV CX,1 ; No of times 
 00CA  B3 00                 1	    MOV BL,00 
 00CC  CD 10                 1	    INT 10H 
 00CE  EB B2			        JMP CURE_JUMP_OUT_OF_RANGE
 00D0				PRINT_CHAR_2:
				        SETCURSOR CURSOR2_CUR_X,22D
 00D0  B4 02                 1	    MOV AH,02H 
 00D2  B7 00                 1	    MOV BH,00H 
 00D4  8A 16 0014 R          1	    MOV DL,CURSOR2_CUR_X 
 00D8  B6 16                 1	    MOV DH,22D 
 00DA  CD 10                 1	    INT 10H 
 00DC  E8 0138 R		        CALL PRTCHAR2        
 00DF  EB A1			        JMP CURE_JUMP_OUT_OF_RANGE
Microsoft (R) Macro Assembler Version 5.10                  12/15/19 15:17:2
                                                             Page     1-6


				        PAUSE
 00E1  EB FE                 1	LB: JMP LB 
				        HALT
 00E3  B4 4C                 1	    MOV AH,4CH 
 00E5  CD 21                 1	    INT 21H 
 00E7				MAIN	ENDP
				
 00E7				TAKE_U1_MSG PROC
 00E7  C3			    RET
 00E8				TAKE_U1_MSG ENDP
				
 00E8				CONFIG PROC
				    ; Access the control bit
 00E8  BA 03FB			    MOV DX, 03FBH
 00EB  B0 80			    MOV AL,80H
 00ED  EE			    OUT DX,AL
				    ; Set the divisor LSB
 00EE  BA 03F8			    MOV DX,3F8H			
 00F1  B0 0C			    MOV AL,0CH			
 00F3  EE			    OUT DX,AL
				    ; Set the divisor MSB
 00F4  BA 03F9			    MOV DX,3F9H			
 00F7  B0 00			    MOV AL,00H			
 00F9  EE			    OUT DX,AL
				    ; Set port config
				    ; d7:Access to Receiver buffer, Transmitter
				 buffer
				    ; d6:Set Break disabled
				    ; d5d4d3:Even Parity
				    ; d2:One Stop Bit
				    ; d1d0:8bits
 00FA  BA 03FB			    MOV DX,3FBH
 00FD  B0 1B			    MOV AL, 00011011B
 00FF  EE			    OUT DX,AL
				
 0100				CONFIG ENDP
				
 0100				PRTCHAR1 PROC
				    PRTCHAR 1,CHAR1,0AH
 0100  B4 09                 1	    MOV AH,09H 
 0102  B7 00                 1	    MOV BH,0 
 0104  A0 0015 R             1	    MOV AL,CHAR1 
 0107  B9 0001               1	    MOV CX,1 ; No of times 
 010A  B3 0A                 1	    MOV BL,0AH 
 010C  CD 10                 1	    INT 10H 
				    GETCURSOR
 010E  B4 03                 1	    MOV AH,03H 
 0110  B7 00                 1	    MOV BH,00H 
 0112  CD 10                 1	    INT 10H 
 0114  FE C2			    INC DL
 0116  80 FA 50			    CMP DL, 80D
 0119  75 18			    JNZ INC_CURSOR1_X
				    SCROLLUP1
 011B  B4 06                 2	    MOV AH,06H 
Microsoft (R) Macro Assembler Version 5.10                  12/15/19 15:17:2
                                                             Page     1-7


 011D  B0 01                 2	    MOV AL,1 
 011F  B7 07                 2	    MOV BH,07H  ; Normal video attribute 
 0121  B5 00                 2	    MOV CH,0 
 0123  B1 00                 2	    MOV CL,0 
 0125  B6 0C                 2	    MOV DH,12D 
 0127  B2 4F                 2	    MOV DL,79D 
 0129  CD 10                 2	    INT 10H 
 012B  C6 06 0013 R 00		    MOV CURSOR1_CUR_X,0
 0130  EB 05 90			    JMP END_UPDATE_CURSOR1
 0133				INC_CURSOR1_X:
 0133  88 16 0013 R		    MOV CURSOR1_CUR_X,DL
 0137				END_UPDATE_CURSOR1:
 0137  C3			    RET 
 0138				PRTCHAR1 ENDP
				
 0138				PRTCHAR2 PROC
				    PRTCHAR 1,CHAR2,0BH
 0138  B4 09                 1	    MOV AH,09H 
 013A  B7 00                 1	    MOV BH,0 
 013C  A0 0016 R             1	    MOV AL,CHAR2 
 013F  B9 0001               1	    MOV CX,1 ; No of times 
 0142  B3 0B                 1	    MOV BL,0BH 
 0144  CD 10                 1	    INT 10H 
				    GETCURSOR
 0146  B4 03                 1	    MOV AH,03H 
 0148  B7 00                 1	    MOV BH,00H 
 014A  CD 10                 1	    INT 10H 
 014C  FE C2			    INC DL
 014E  80 FA 50			    CMP DL, 80D
 0151  75 18			    JNZ INC_CURSOR2_X
				    SCROLLUP2
 0153  B4 06                 2	    MOV AH,06H 
 0155  B0 01                 2	    MOV AL,1 
 0157  B7 07                 2	    MOV BH,07H  ; Normal video attribute 
 0159  B5 0E                 2	    MOV CH,14D 
 015B  B1 00                 2	    MOV CL,0 
 015D  B6 18                 2	    MOV DH,24D 
 015F  B2 4F                 2	    MOV DL,79D 
 0161  CD 10                 2	    INT 10H 
 0163  C6 06 0014 R 00		    MOV CURSOR2_CUR_X,0
 0168  EB 05 90			    JMP END_UPDATE_CURSOR2
 016B				INC_CURSOR2_X:
 016B  88 16 0014 R		    MOV CURSOR2_CUR_X,DL
 016F				END_UPDATE_CURSOR2:
 016F  C3			    RET
 0170				PRTCHAR2 ENDP
				
				; UPDATE_CURSOR PROC
				;     GETCURSOR
				;     INC DL
				;     CMP DL, 79D
				;     JNZ INC_CURSOR_X
				;     SCROLLUP1
				;     SCROLLUP2
Microsoft (R) Macro Assembler Version 5.10                  12/15/19 15:17:2
                                                             Page     1-8


				;     MOV CURSOR_CUR_X,0
				;     JMP END_UPDATE_CURSOR
				; INC_CURSOR_X:
				;     MOV CURSOR_CUR_X,DL
				; END_UPDATE_CURSOR:
				;     RET 
				; UPDATE_CURSOR ENDP
				
 0170				DRWLINECENTER PROC
				    SETCURSOR 0,13D
 0170  B4 02                 1	    MOV AH,02H 
 0172  B7 00                 1	    MOV BH,00H 
 0174  B2 00                 1	    MOV DL,0 
 0176  B6 0D                 1	    MOV DH,13D 
 0178  CD 10                 1	    INT 10H 
				    PRTCHAR 80,"=",0FH
 017A  B4 09                 1	    MOV AH,09H 
 017C  B7 00                 1	    MOV BH,0 
 017E  B0 3D                 1	    MOV AL,"=" 
 0180  B9 0050               1	    MOV CX,80 ; No of times 
 0183  B3 0F                 1	    MOV BL,0FH 
 0185  CD 10                 1	    INT 10H 
 0187  C3			    RET
 0188				DRWLINECENTER ENDP
				END		MAIN

Microsoft (R) Macro Assembler Version 5.10                  12/15/19 15:17:2
                                                             Symbols-1


Macros:

		N a m e			Lines

CLEARKEYBOARDBUFFER  . . . . . .  	   6
CLRS . . . . . . . . . . . . . .  	   5
COMPARE_KEY  . . . . . . . . . .  	   1
GETCURSOR  . . . . . . . . . . .  	   3
GETKEY . . . . . . . . . . . . .  	   2
GETKEY1  . . . . . . . . . . . .  	   2
GETKEY2  . . . . . . . . . . . .  	   2
GETKEY_NOWAIT  . . . . . . . . .  	   3
HALT . . . . . . . . . . . . . .  	   2
PAUSE  . . . . . . . . . . . . .  	   1
PRINTMSG . . . . . . . . . . . .  	   3
PRTCHAR  . . . . . . . . . . . .  	   6
SCROLL . . . . . . . . . . . . .  	   8
SCROLLUP1  . . . . . . . . . . .  	   1
SCROLLUP2  . . . . . . . . . . .  	   1
SETCURSOR  . . . . . . . . . . .  	   5

Segments and Groups:

                N a m e         	Length	 Align	Combine Class

DGROUP . . . . . . . . . . . . .  	GROUP
  _DATA  . . . . . . . . . . . .  	0017	WORD	PUBLIC	'DATA'
  STACK  . . . . . . . . . . . .  	0040	PARA	STACK	'STACK'
_TEXT  . . . . . . . . . . . . .  	0188	WORD	PUBLIC	'CODE'

Symbols:            

                N a m e         	Type	 Value	 Attr

CHAR1  . . . . . . . . . . . . .  	L BYTE	0015	_DATA
CHAR2  . . . . . . . . . . . . .  	L BYTE	0016	_DATA
CHECK_BACKSPACE1_LB  . . . . . .  	L NEAR	0045	_TEXT
CHECK_BACKSPACE2_LB  . . . . . .  	L NEAR	00A6	_TEXT
CONFIG . . . . . . . . . . . . .  	N PROC	00E8	_TEXT	Length = 0018
CURE_JUMP_OUT_OF_RANGE . . . . .  	L NEAR	0082	_TEXT
CURSOR1_CUR_X  . . . . . . . . .  	L BYTE	0013	_DATA
CURSOR2_CUR_X  . . . . . . . . .  	L BYTE	0014	_DATA

DRWLINECENTER  . . . . . . . . .  	N PROC	0170	_TEXT	Length = 0018

END_UPDATE_CURSOR1 . . . . . . .  	L NEAR	0137	_TEXT
END_UPDATE_CURSOR2 . . . . . . .  	L NEAR	016F	_TEXT

INC_CURSOR1_X  . . . . . . . . .  	L NEAR	0133	_TEXT
INC_CURSOR2_X  . . . . . . . . .  	L NEAR	016B	_TEXT

LB . . . . . . . . . . . . . . .  	L NEAR	00E1	_TEXT

Microsoft (R) Macro Assembler Version 5.10                  12/15/19 15:17:2
                                                             Symbols-2


MAIN . . . . . . . . . . . . . .  	F PROC	0000	_TEXT	Length = 00E7
MAIN_LP  . . . . . . . . . . . .  	L NEAR	0022	_TEXT

PRINT_CHAR_1 . . . . . . . . . .  	L NEAR	0070	_TEXT
PRINT_CHAR_2 . . . . . . . . . .  	L NEAR	00D0	_TEXT
PRTCHAR1 . . . . . . . . . . . .  	N PROC	0100	_TEXT	Length = 0038
PRTCHAR2 . . . . . . . . . . . .  	N PROC	0138	_TEXT	Length = 0038

TAKE2  . . . . . . . . . . . . .  	L NEAR	0084	_TEXT
TAKE_U1_MSG  . . . . . . . . . .  	N PROC	00E7	_TEXT	Length = 0001
TESTMSG  . . . . . . . . . . . .  	L BYTE	0000	_DATA

@CODE  . . . . . . . . . . . . .  	TEXT  _TEXT		
@CODESIZE  . . . . . . . . . . .  	TEXT  0		
@CPU . . . . . . . . . . . . . .  	TEXT  0101h		
@DATASIZE  . . . . . . . . . . .  	TEXT  0		
@FILENAME  . . . . . . . . . . .  	TEXT  chat		
@VERSION . . . . . . . . . . . .  	TEXT  510		


    271 Source  Lines
    393 Total   Lines
     56 Symbols

  47930 + 451134 Bytes symbol space free

      0 Warning Errors
      0 Severe  Errors
